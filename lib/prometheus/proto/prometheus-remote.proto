// Copyright 2016 Prometheus Team
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Source: https://github.com/prometheus/prometheus/blob/master/prompb/remote.proto

syntax = "proto3";
package prometheus;

option go_package = "prompb";

import "google/protobuf/descriptor.proto";

extend google.protobuf.FieldOptions {
  bool nullable = 65001;
}

message MetricMetadata {
  enum MetricType {
    UNKNOWN        = 0;
    COUNTER        = 1;
    GAUGE          = 2;
    HISTOGRAM      = 3;
    GAUGEHISTOGRAM = 4;
    SUMMARY        = 5;
    INFO           = 6;
    STATESET       = 7;
  }

  // Represents the metric type, these match the set from Prometheus.
  // Refer to pkg/textparse/interface.go for details.
  // https://github.com/prometheus/prometheus/blob/master/pkg/textparse/interface.go
  MetricType type = 1;
  string metric_family_name = 2;
  string help = 4;
  string unit = 5;
}

message Sample {
  double value    = 1;
  int64 timestamp = 2;
}

// TimeSeries represents samples and labels for a single time series.
message TimeSeries {
  repeated Label labels   = 1 [(nullable) = false];
  repeated Sample samples = 2 [(nullable) = false];
}

message Label {
  string name  = 1;
  string value = 2;
}

message WriteRequest {
  repeated prometheus.TimeSeries timeseries = 1 [(nullable) = false];
  // Cortex uses this field to determine the source of the write request.
  // We reserve it to avoid any compatibility issues.
  reserved  2;
  repeated prometheus.MetricMetadata metadata = 3 [(nullable) = false];
}
