[package]
name = "vertex"
version = "0.1.0"
authors = ["f1shl3gs"]
edition = "2021"

exclude = [
    "tests/fixtures"
]

[profile.release]
debug = false

[profile.bench]
debug = true

[workspace]
members = [
    "lib/buffers",
    "lib/event",
    "lib/framework",
    "lib/procfs",
    "lib/internal",
    "lib/prometheus",
    "lib/testify",
    "lib/tail",
    "lib/log_schema",
    "lib/tracing-limit",
    "lib/humanize",
    "lib/sysinfo",
    "lib/virt",
    "lib/jaeger",
    "lib/tracing-internal",
]

[features]

benches = [
    "sources-syslog",
    "sinks-loki"
]

default = [
    # "tokio-console",
    # common
    "disk-buffer",
    "sources",
    "transforms",
    "sinks",
    # extensions
    "extensions-pprof",
    "extensions-healthcheck"
    # "extensions-jemalloc",
]

target-x86_64-unknown-linux-musl = [
    "disk-buffer",
    "extensions",
    "sinks",
    "sources",
    "transforms",
    "rdkafka-cmake",
    "unix",
]

target-x86_64-unknown-linux-gnu = [
    "disk-buffer",
    "extensions",
    "sinks",
    "sources",
    "transforms",
    "rdkafka-cmake",
    "unix",
]

# Integration tests
all-integration-tests = [
    "integration-tests-consul",
    "integration-tests-nginx_stub",
    "integration-tests-redis",
    "integration-tests-mysql",
    "integration-tests-zookeeper",
    "integration-tests-kafka",
    "integration-tests-loki",
    "integration-tests-haproxy",
    "integration-tests-memcached",
    "integration-tests-ntp",
    "integration-tests-prometheus_scrape",
    "integration-tests-prometheus_exporter",
    "integration-tests-prometheus_remote_write"
]

integration-tests-consul = []
integration-tests-nginx_stub = []
integration-tests-redis = []
integration-tests-mysql = []
integration-tests-zookeeper = []
integration-tests-kafka = []
integration-tests-loki = []
integration-tests-haproxy = []
integration-tests-memcached = []
integration-tests-ntp = []
integration-tests-prometheus_scrape = []
integration-tests-prometheus_exporter = []
integration-tests-prometheus_remote_write = []

# Common
disk-buffer = []
tokio-console = ["framework/tokio-console", "tokio/tracing"]

# Allocator
allocator-mimalloc = ["mimalloc"]
allocator-jemalloc = ["jemallocator"]

# Sources
sources = [
    "sources-bind",
    "sources-consul",
    "sources-elasticsearch",
    "sources-exec",
    "sources-fluentd",
    "sources-generator",
    "sources-haproxy",
    "sources-internal_logs",
    "sources-internal_metrics",
    "sources-internal_traces",
    "sources-jaeger",
    "sources-journald",
    "sources-kafka",
    "sources-kafka_metrics",
    "sources-kmsg",
    "sources-libvirt",
    "sources-memcached",
    "sources-mongodb",
    "sources-mysqld",
    "sources-nginx_stub",
    "sources-node_metrics",
    "sources-ntp",
    "sources-nvidia_smi",
    "sources-prometheus_scrape",
    "sources-prometheus_remote_write",
    "sources-pulsar",
    "sources-redis",
    "sources-selfstat",
    "sources-syslog",
    "sources-tail",
    "sources-zookeeper",
]

sources-bind = []
sources-consul = []
sources-exec = ["tokio/process"]
sources-generator = []
sources-node_metrics = ["libc", "netlink-packet-sock-diag", "netlink-sys"]
sources-ntp = ["rsntp/tokio", "rsntp/async"]
sources-kafka = ["rdkafka", "async-stream"]
sources-kafka_metrics = ["rdkafka"]
sources-kmsg = []
sources-selfstat = ["libc"]
sources-jaeger = ["jaeger", "tonic"]
sources-journald = []
sources-internal_logs = []
sources-internal_metrics = []
sources-internal_traces = ["tracing-subscriber"]
sources-redis = ["redis"]
sources-pulsar = []
sources-prometheus_scrape = ["prometheus"]
sources-prometheus_remote_write = ["snap"]
sources-nginx_stub = []
sources-zookeeper = []
sources-haproxy = []
sources-memcached = []
sources-fluentd = []
sources-syslog = ["codecs", "sources-utils-tcp-keepalive", "sources-utils-tcp-socket", "tls-utils"]
sources-tail = []
sources-libvirt = ["virt"]
sources-mysqld = ["sqlx"]
sources-nvidia_smi = ["serde-xml-rs"]
sources-mongodb = []
sources-elasticsearch = []

# transforms
transforms = [
    "transforms-add_tags",
    "transforms-add_fields",
    "transforms-aggregate",
    "transforms-cardinality",
    "transforms-sample",
    "transforms-substr",
    "transforms-throttle"
]
transforms-add_tags = []
transforms-add_fields = []
transforms-aggregate = ["async-stream"]
transforms-cardinality = ["bloom"]
transforms-sample = ["seahash"]
transforms-substr = []
transforms-throttle = ["governor"]

# sinks
sinks = [
    "sinks-blackhole",
    "sinks-clickhouse",
    "sinks-elasticsearch",
    "sinks-jaeger",
    "sinks-kafka",
    "sinks-loki",
    "sinks-prometheus_exporter",
    "sinks-prometheus_remote_write",
    "sinks-pulsar",
    "sinks-socket",
    "sinks-stdout",
    "sinks-vertex",
]

sinks-prometheus_exporter = []
sinks-prometheus_remote_write = ["snap"]
sinks-stdout = []
sinks-blackhole = []
sinks-kafka = ["rdkafka"]
sinks-jaeger = ["jaeger"]
sinks-pulsar = []
sinks-elasticsearch = []
sinks-loki = []
sinks-vertex = []
sinks-clickhouse = []
sinks-socket = []

# extensions
extensions = [
    "extensions-healthcheck"
]

extensions-pprof = ["pprof/flamegraph"]
extensions-jemalloc = ["jemallocator", "jemalloc-ctl", "jemalloc-sys"]
extensions-healthcheck = []

# Codecs
codecs = ["smallvec", "memchr"]

# Misc
sources-utils-tcp-keepalive = []
sources-utils-tcp-socket = []
tls-utils = []

bench = [
    "sinks-loki",
    "sources-haproxy",
    "sources-node_metrics",
]

# Enables `rdkafka` dependency.
# This feature is more portable, but requires `cmake` as build dependency. Use it if `rdkafka-plain` doesn't work.
# The `sasl` feature has to be added because of the limitations of `librdkafka` build scripts for `cmake`.
rdkafka-cmake = ["rdkafka", "rdkafka/cmake_build"]

# Enables features that work only on systems providing `cfg(unix)`
unix = []

[[bench]]
name = "loki"
harness = false
path = "benches/loki.rs"

[[bench]]
name = "hwmon_gather"
harness = false
path = "benches/node_source_hwmon.rs"

[[bench]]
name = "haproxy"
harness = false
path = "benches/haproxy.rs"

[target.'cfg(unix)'.dependencies]
atty = "0.2.14"
nix = ">=0.22.2"

[build-dependencies]
prost-build = { version = "0.9" }

[dev-dependencies]
assert_cmd = { version = "2.0.2" }
criterion = { version = "0.3.5", default-features = false, features = ["async_tokio"] }
env-test-util = { version = "1.0.1" }
framework = { path = "lib/framework", features = ["test-util"]}
indoc = { version = "1.0.4", default-features = false }
pretty_assertions = { version = "1.1.0" }
proptest = { version = "1.0" }
rand = { version = "0.8.5" }
tempfile = { version = "3.2.0" }
testcontainers = { version = "0.12.0" }
testify = { path = "lib/testify" }
tokio = { version = "1.17.0", features = ["test-util"] }
tokio-test = { version = "0.4.2" }
tower-test = { version = "0.4.0" }

[dependencies]
# workspaces
buffers = { path = "lib/buffers" }
event = { path = "lib/event" }
framework = { path = "lib/framework" }
humanize = { path = "lib/humanize" }
internal = { path = "lib/internal" }
jaeger = { path = "lib/jaeger", optional = true }
log_schema = { path = "lib/log_schema" }
prometheus = { path = "lib/prometheus", optional = true }
shared = { path = "lib/shared" }
sysinfo = { path = "lib/sysinfo" }
tail = { path = "lib/tail" }
virt = { path = "lib/virt", optional = true }

# Allocation
mimalloc = { version = "0.1.27", default-features = false, optional = true }
jemallocator = { version = "0.3.2", default-features = false, optional = true }
jemalloc-sys = { version = "0.3.2", optional = true, features = ["stats", "profiling", "unprefixed_malloc_on_supported_platforms"] }
jemalloc-ctl = { version = "0.3.3", optional = true }

# Futrures & Tokio
tokio = { version = "1.17.0", features = ["time", "net", "signal", "fs", "rt-multi-thread", "io-util", "process"] }
tokio-stream = { version = "0.1.8", features = ["time", "net"] }
tokio-util = { version = "0.6.9", default-features = false, features = ["codec", "time", "net"] }
bytes = { version = "1.1.0", default-features = false, features = ["serde"] }
futures = { version = "0.3.21", default-features = false }
futures-util = { version = "0.3.18", default-features = false }
async-trait = { version = "0.1.52" }
pin-project = { version = "1.0.10" }
stream-cancel = { version = "0.8.1" }

# Metrics
metrics = { version = "0.18.0", default-features = false }

# Tracing
tracing = { version = "0.1.30", default-features = false }
tracing-log = { version = "0.1.2", default-features = false }
tracing-subscriber = { version = "0.3.9", optional = true, default-features = false, features = ["std", "registry"] }
tracing-core = { version = "0.1.22" }

# HTTP
hyper = { version = "0.14.17", features = ["client", "runtime", "http1", "http2", "server", "stream"] }
http = { version = "0.2.6", default-features = false }
headers = { version = "0.3.7" }

# Tower
tower = { version = "0.4.12", default-features = false, features = ["buffer", "limit", "retry", "timeout", "util"] }

# Serde
serde = { version = "1.0.136", features = ["derive", "std", "rc"] }
serde_yaml = { version = "0.8.23" }
serde_json = { version = "1.0.79", default-features = false }
serde-xml-rs = { version = "0.5", default-features = false, optional = true }

# Netlink
netlink-sys = { version = "0.8.2", features = ["tokio_socket"], optional = true }
netlink-packet-sock-diag = { version = "0.4.0", optional = true }

# Protobuf
prost = { version = "0.9.0", default-features = false, features = ["std"] }
prost-types = { version = "0.9.0", default-features = false }

# TLS
openssl-probe = { version = "0.1.5", default-features = false }

# Profile
pprof = { version = "0.6.2", default-features = false, optional = true, features = ["flamegraph", "protobuf"] }

# External libs
argh = { version = "0.1.7" }
async-stream = { version = "0.3.2", optional = true }
bloom = { version = "0.3.2", default-features = false, optional = true }
chrono = { version = "0.4.19", features = ["serde"] }
chrono-tz = { version = "0.6.1", features = ["serde"] }
colored = { version = "2.0.0", default-features = false }
dyn-clone = { version = "1.0.4" }
encoding_rs = { version = "0.8.30", features = ["serde"]}
exitcode = { version = "1.1.2" }
glob = { version = "0.3.0" }
governor = { version = "0.4.2", default-features = false, optional = true, features = ["dashmap", "jitter", "std"] }
indexmap = { version = "1.7.0", default-features = false, features = ["serde"] }
inventory = { version = "0.1.11" }
lazy_static = { version = "1.4.0" }
libc = { version = "0.2.117", optional = true }
memchr = { version = "2.4.1", optional = true, default-features = false}
# mongodb = { version = "2.1.0", default-features = false, optional = true, features = ["tokio-runtime"] }
num_cpus = { version = "1.13.1" }
nom = { version = "7.1.0", default-features = false }
# pulsar = { version = "4.1.1", default-features = false, optional = true, features = ["tokio-runtime", "compression"] }
percent-encoding = { version = "2.1.0", default-features = false }
rdkafka = { version = "0.28.0", default-features = false, optional = true, features = ["tokio", "zstd", "libz"] }
redis = { version = "0.21.4", default-features = false, optional = true, features = ["tokio-comp", "connection-manager"] }
regex = { version = "1.5.4" }
rsntp = { version = "2.1.0", default-features = false, features = ["tokio"], optional = true }
seahash = { version = "4.1.0", default-features = false, optional = true }
smallvec = { version = "1.8.0", optional = true, features = ["union"] }
snafu = { version = "0.6.10", default-features = false }
snap = { version = "1.0.5", default-features = false, optional = true }
strip-ansi-escapes = { version = "0.1.1", default-features = false }
sqlx = { version = "0.5.10", default-features = false, optional = true, features = ["mysql", "runtime-tokio-rustls", "macros"] }
tonic = { version = "0.6.2", optional = true }
typetag = { version = "0.1.8" }
url = { version = "2.2.2", features = ["serde"] }