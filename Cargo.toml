[package]
name = "vertex"
version = "0.1.0"
authors = ["f1shl3gs"]
edition = "2021"
description = "A lightweight and ultra-fast tool for building observability pipelines"
repository = "https://github.com/f1shl3gs/vertex"
publish = false
# Minimum supported rust version
rust-version = "1.70.0"

exclude = [
    "tests/fixtures"
]

# This profile optimizes for runtime performance and small binary size at the expense of longer
# build times. It's most suitable for final release builds.
[profile.release]
debug = false
lto = "thin"

# This profile optimizes for short build times at the expense of larger binary size and slower
# runtime performance.
[profile.dev]
lto = false
incremental = true

[profile.bench]
debug = true

[workspace]
members = [
    "lib/backoff",
    "lib/buffers",
    "lib/codecs",
    "lib/condition",
    "lib/configurable",
    "lib/configurable-derive",
    "lib/event",
    "lib/finalize",
    "lib/framework",
    "lib/jaeger",
    "lib/log_schema",
    "lib/measurable",
    "lib/metrics",
    "lib/multiline",
    "lib/prometheus",
    "lib/sysinfo",
    "lib/tail",
    "lib/testify",
    "lib/tracing-internal",
    "lib/tracing-limit",
    "lib/tripwire",
    "lib/value",
    "lib/virt",
]

[features]
default = [
    "jemalloc",

    "extensions",
    "sources",
    "transforms",
    "sinks",
]

target-x86_64-unknown-linux-musl = [
    "jemalloc",

    "extensions",
    "sinks",
    "sources",
    "transforms",
]

target-x86_64-unknown-linux-gnu = [
    "jemalloc",

    "extensions",
    "sinks",
    "sources",
    "transforms",
]

benches = [
    "sources-node_metrics",
    "sources-haproxy",
    "sinks-loki"
]

# Integration tests
integration-tests-clickhouse = []
integration-tests-consul = []
integration-tests-elasticsearch = []
integration-tests-haproxy = []
integration-tests-kafka = []
integration-tests-loki = []
integration-tests-memcached = []
integration-tests-mysql = []
integration-tests-nginx_stub = []
integration-tests-ntp = []
integration-tests-prometheus_exporter = []
integration-tests-prometheus_remote_write = []
integration-tests-prometheus_scrape = []
integration-tests-redis = []
integration-tests-zookeeper = []

all-integration-tests = [
    "integration-tests-consul",
    "integration-tests-elasticsearch",
    "integration-tests-haproxy",
    "integration-tests-kafka",
    "integration-tests-loki",
    "integration-tests-memcached",
    "integration-tests-mysql",
    "integration-tests-nginx_stub",
    "integration-tests-ntp",
    "integration-tests-prometheus_exporter",
    "integration-tests-prometheus_remote_write",
    "integration-tests-prometheus_scrape",
    "integration-tests-redis",
    "integration-tests-zookeeper"
]

extensions-heartbeat = ["dep:uuid", "dep:sysinfo", "parking_lot/serde"]
extensions-healthcheck = []
extensions-jemalloc = [
    "dep:tikv-jemalloc-ctl",
    "dep:tikv-jemalloc-sys",
    "tikv-jemallocator/stats",
    "tikv-jemallocator/profiling",
]
extensions-pprof = ["dep:pprof"]
extensions-zpages = []

# Extensions
extensions = [
    "extensions-healthcheck",
    "extensions-heartbeat",
    "extensions-jemalloc",
    # Musl does not provide "pthread_getname_np" in current release.
    # https://github.com/tikv/pprof-rs/issues/41
    "extensions-pprof",
    "extensions-zpages"
]

# Sources
sources-bind = []
sources-chrony = []
sources-consul = []
sources-demo_logs = []
sources-exec = ["tokio/process"]
sources-clickhouse_metrics = []
sources-elasticsearch = []
sources-grpc_check = ["dep:tonic", "dep:tonic-health"]
sources-haproxy = []
sources-http_check = []
sources-internal_logs = []
sources-internal_metrics = []
sources-internal_traces = ["dep:tracing-subscriber"]
sources-jaeger = ["dep:jaeger", "dep:tonic"]
sources-journald = []
sources-kafka = ["dep:rskafka", "dep:async-stream"]
sources-kafka_metrics = ["dep:rskafka"]
sources-kmsg = []
sources-kubernetes_logs = ["dep:tail", "dep:multiline", "kubernetes", "dep:ahash", "dep:parking_lot"]
sources-kubernetes_events = ["kubernetes"]
sources-libvirt = ["dep:virt"]
sources-memcached = []
sources-mongodb = []
sources-mysqld = ["dep:sqlx"]
sources-nginx_stub = []
sources-node_metrics = ["dep:libc", "dep:netlink-packet-sock-diag", "dep:netlink-sys", "dep:netlink-packet-core"]
sources-ntp = ["rsntp/tokio", "rsntp/async"]
sources-nvidia_smi = ["dep:quick-xml"]
sources-prometheus_scrape = ["dep:prometheus"]
sources-prometheus_remote_write = ["dep:snap"]
sources-redis = []
sources-selfstat = ["dep:libc"]
sources-syslog = ["codecs/syslog", "dep:smallvec"]
sources-tail = ["dep:tail", "dep:multiline", "dep:encoding_rs"]
sources-zookeeper = []

sources = [
    "sources-bind",
    "sources-chrony",
    "sources-consul",
    "sources-clickhouse_metrics",
    "sources-demo_logs",
    "sources-elasticsearch",
    "sources-grpc_check",
    "sources-exec",
    "sources-haproxy",
    "sources-http_check",
    "sources-internal_logs",
    "sources-internal_metrics",
    "sources-internal_traces",
    "sources-jaeger",
    "sources-journald",
    "sources-kafka",
    "sources-kafka_metrics",
    "sources-kmsg",
    "sources-kubernetes_events",
    "sources-kubernetes_logs",
    "sources-libvirt",
    "sources-memcached",
    "sources-mongodb",
    "sources-mysqld",
    "sources-nginx_stub",
    "sources-node_metrics",
    "sources-ntp",
    "sources-nvidia_smi",
    "sources-prometheus_scrape",
    "sources-prometheus_remote_write",
    "sources-redis",
    "sources-selfstat",
    "sources-syslog",
    "sources-tail",
    "sources-zookeeper",
]

transforms-cardinality = ["dep:bloomy"]
transforms-dedup = ["dep:lru"]
transforms-filter = ["dep:condition"]
transforms-geoip = ["dep:maxminddb"]
transforms-metricalize = ["dep:async-stream"]
transforms-modify = []
transforms-rewrite = []
transforms-route = ["dep:condition"]
transforms-sample = []
transforms-throttle = ["dep:gcra"]

# transforms
transforms = [
    "transforms-cardinality",
    "transforms-dedup",
    "transforms-filter",
    "transforms-geoip",
    "transforms-metricalize",
    "transforms-modify",
    "transforms-rewrite",
    "transforms-route",
    "transforms-sample",
    "transforms-throttle"
]

# Sinks
sinks-blackhole = []
sinks-clickhouse = []
sinks-console = []
sinks-elasticsearch = []
sinks-influxdb = []
sinks-jaeger = ["dep:jaeger"]
sinks-kafka = ["dep:rskafka"]
sinks-loki = ["dep:snap", "dep:buffers"]
sinks-prometheus_exporter = ["dep:flate2"]
sinks-prometheus_remote_write = ["dep:snap"]
sinks-socket = []

sinks = [
    "sinks-blackhole",
    "sinks-clickhouse",
    "sinks-console",
    "sinks-elasticsearch",
    "sinks-influxdb",
    "sinks-jaeger",
    "sinks-kafka",
    "sinks-loki",
    "sinks-prometheus_exporter",
    "sinks-prometheus_remote_write",
    "sinks-socket",
]

# Common
tokio-console = ["framework/tokio-console", "tokio/tracing"]

# Allocator
# mimalloc is an optional dependecy, and the feature `mimalloc` is created by default. So no
# need to declare it again.
jemalloc = ["dep:tikv-jemallocator"]

# Enables kubernetes dependencies and shared code. Kubernetes-related sources,
# transforms and sinks should depend on this feature.
kubernetes = ["dep:k8s-openapi", "dep:kube"]

bench = [
    "sinks-loki",
    "sources-haproxy",
    "sources-node_metrics",
]

[[bench]]
name = "loki"
harness = false
path = "benches/loki.rs"

[[bench]]
name = "hwmon_gather"
harness = false
path = "benches/node_source_hwmon.rs"

[[bench]]
name = "haproxy"
harness = false
path = "benches/haproxy.rs"

[build-dependencies]
prost-build = { version = "0.12.3", default-features = false }

[dev-dependencies]
base64 = { version = "0.21.5", default-features = false }
criterion = { version = "0.5.1", default-features = false, features = ["async_tokio"] }
event = { path = "lib/event", features = ["string_path"] }
framework = { path = "lib/framework", features = ["test-util"] }
pretty_assertions = { version = "1.4.0", default-features = false, features = ["std"] }
rand = { version = "0.8.5", default-features = false }
serde_path_to_error = { version = "0.1.14", default-features = false }
tempfile = { version = "3.8.1", default-features = false }
testify = { path = "lib/testify" }
tokio = { version = "1.34.0", default-features = false, features = ["test-util", "time"] }

[target.'cfg(unix)'.dependencies]
nix = { version = "0.27.1", default-features = false, features = ["net"] }

[dependencies]
# Workspaces
buffers = { path = "lib/buffers", optional = true }
codecs = { path = "lib/codecs" }
condition = { path = "lib/condition", optional = true }
configurable = { path = "lib/configurable" }
event = { path = "lib/event" }
framework = { path = "lib/framework" }
humanize = { git = "https://github.com/f1shl3gs/humanize", default-features = false, features = ["bytes", "serde"], rev = "3ce391414e9417c36ca386b50ef82e6d2e1882dd" }
jaeger = { path = "lib/jaeger", optional = true }
log_schema = { path = "lib/log_schema" }
multiline = { path = "lib/multiline", optional = true }
prometheus = { path = "lib/prometheus", optional = true }
measurable = { path = "lib/measurable" }
sysinfo = { path = "lib/sysinfo", optional = true }
tail = { path = "lib/tail", optional = true }
tripwire = { path = "lib/tripwire" }
virt = { path = "lib/virt", optional = true }
metrics = { path = "lib/metrics" }

# Allocation
mimalloc = { version = "0.1.39", default-features = false, optional = true }
tikv-jemallocator = { version = "0.5.4", optional = true, features = ["unprefixed_malloc_on_supported_platforms"] }
tikv-jemalloc-ctl = { version = "0.5.4", optional = true, features = ["use_std"] }
tikv-jemalloc-sys = { version = "0.5.4", optional = true, features = ["stats"] }

# Futrures & Tokio
async-stream = { version = "0.3.5", optional = true }
async-trait = { version = "0.1.74", default-features = false }
futures = { version = "0.3.29", default-features = false }
futures-util = { version = "0.3.29", default-features = false }
tokio = { version = "1.34.0", default-features = false, features = ["time", "net", "signal", "fs", "rt-multi-thread", "io-util", "process"] }
tokio-stream = { version = "0.1.14", features = ["time", "net", "sync"] }
tokio-util = { version = "0.7.10", default-features = false, features = ["codec", "time", "net"] }

# Tracing
tracing = { version = "0.1.40", default-features = false }
tracing-subscriber = { version = "0.3.18", optional = true, default-features = false, features = ["std", "registry", "ansi"] }

# HTTP
hyper = { version = "0.14.27", features = ["client", "runtime", "http1", "http2", "server", "stream"] }
http = { version = "0.2.11", default-features = false }

# Tower
tower = { version = "0.4.13", default-features = false }

# Serde
serde = { version = "1.0.193", default-features = false, features = ["derive"] }
serde_yaml = { version = "0.9.27", default-features = false }
serde_json = { version = "1.0.108", default-features = false }

# Netlink
netlink-sys = { version = "0.8.5", features = ["tokio_socket"], optional = true }
netlink-packet-sock-diag = { version = "0.4.2", optional = true }
netlink-packet-core = { version = "0.7.0", optional = true }

# Protobuf
prost = { version = "0.12.3", default-features = false, features = ["std"] }
prost-types = { version = "0.12.3", default-features = false }

# Profile
pprof = { version = "0.13.0", default-features = false, optional = true, features = ["flamegraph", "prost-codec"] }

# Cli
argh = { version = "0.1.12" }

# External libs
ahash = { version = "0.8.6", default-features = false, optional = true }
bloomy = { version = "1.2.0", default-features = false, optional = true }
bytes = { version = "1.5.0", default-features = false }
chrono = { version = "0.4.31", default-features = false }
chrono-tz = { version = "0.8.4", default-features = false }
encoding_rs = { version = "0.8.33", optional = true, features = ["serde"] }
exitcode = { version = "1.1.2" }
flate2 = { version = "1.0.28", optional = true }
gcra = { git = "https://github.com/f1shl3gs/gcra.git", rev = "6473b6da31cf1bd35e5e63790c9503a02c076f96", optional = true }
glob = { version = "0.3.1" }
indexmap = { version = "2.1.0", default-features = false, features = ["serde"] }
inventory = { version = "0.3.13", default-features = false }
k8s-openapi = { version = "0.20.0", default-features = false, optional = true, features = ["v1_22"] }
kube = { version = "0.87.1", default-features = false, optional = true, features = ["client", "runtime", "rustls-tls"] }
libc = { version = "0.2.150", default-features = false, optional = true }
lru = { version = "0.12.0", default-features = false, optional = true }
maxminddb = { version = "0.23.0", default-features = false, optional = true }
memchr = { version = "2.6.4", optional = true, default-features = false }
# mongodb = { version = "2.1.0", default-features = false, optional = true, features = ["tokio-runtime"] }
nom = { version = "7.1.3", default-features = false }
once_cell = { version = "1.18.0" }
# pulsar = { version = "4.1.1", default-features = false, optional = true, features = ["tokio-runtime", "compression"] }
parking_lot = { version = "0.12.1", default-features = false, optional = true }
percent-encoding = { version = "2.3.0", default-features = false }
quick-xml = { version = "0.31.0", default-features = false, features = ["serialize"], optional = true }
regex = { version = "1.10.2", default-features = false }
rskafka = { git = "https://github.com/f1shl3gs/rskafka", rev = "d48e59787305614f62d112f185cd234601ac8955", optional = true, features = ["transport-tls"] }
rsntp = { version = "3.0.2", default-features = false, features = ["tokio"], optional = true }
smallvec = { version = "1.11.2", default-features = false, optional = true }
snap = { version = "1.1.0", default-features = false, optional = true }
sqlx = { version = "0.7.2", default-features = false, optional = true, features = ["mysql", "runtime-tokio-rustls", "macros"] }
thiserror = { version = "1.0.50" }
tonic = { version = "0.10.2", default-features = false, features = ["transport"], optional = true }
tonic-health = { version = "0.10.2", default-features = false, optional = true }
typetag = { version = "0.2.13" }
url = { version = "2.4.1", features = ["serde"] }
uuid = { version = "1.6.1", default-features = false, features = ["v4"], optional = true }
