apiVersion: v1
kind: ConfigMap
metadata:
  name: vertex
data:
  agent: |
    sources: 
      k8s_logs:
        type: kubernetes_logs
        provider:
          type: kubernetes
          node_name: ${VERTEX_NODE_NAME}
      # node:
      #   type: node
      #   proc_path: /host/proc
      #   sys_path: /host/sys
      #   filesystem: 
      #     mount_points_exclude: ^/(dev|proc|sys|run/k3s/containerd/.+|var/lib/docker/.+|var/lib/kubelet/pods/.+)($|/)
      #   hwmon: false
      #   btrfs: false
      #   netclass: 
      #     ignores: ^(veth.*|[a-f0-9]{15})$
      #   netdev:
      #     exclude: ^(veth.*|[a-f0-9]{15})$
      selfstat:
        type: selfstat
      # internal_logs:
      #   type: internal_logs
    sinks:
      prom:
        type: prometheus_exporter
        inputs:
          - selfstat
      loki:
        type: loki
        inputs:
          - k8s_logs
        endpoint: http://loki.default.svc.cluster.local:3100
        labels: 
          namespace: "{{ pod.namespace }}"
          pod: "{{ pod.name }}"
          container: "{{ container.name }}"
        encoding:
          codec: json
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: vertex
  labels:
    app.kubernetes.io/name: vertex
    app.kubernetes.io/component: agent
spec:
  minReadySeconds: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: vertex
      app.kubernetes.io/component: agent
  template:
    metadata:
      labels:
        app.kubernetes.io/name: vertex
        app.kubernetes.io/component: agent
    spec:
      serviceAccountName: monitoring
      dnsPolicy: ClusterFirst
      containers:
        - name: vertex
          image: f1shl3gs/vertex:nightly-distroless
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 500m
              memory: 200Mi
            limits:
              cpu: 1000m
              memory: 600Mi
          env:
            - name: VERTEX_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - name: config
              mountPath: /etc/vertex
              readOnly: true
            - name: procfs
              mountPath: /host/proc
              readOnly: true
            - name: sysfs
              mountPath: /host/sys
              readOnly: true
            - name: udev
              mountPath: /run/udev
              readOnly: true
            - name: data
              mountPath: /var/lib/vertex
            - name: logs
              mountPath: /var/log/pods
      terminationGracePeriodSeconds: 60
      volumes:
        - name: config
          configMap:
            name: vertex
            items:
              - key: agent
                path: vertex.yaml
        - name: procfs
          hostPath:
            path: /proc
        - name: sysfs
          hostPath:
            path: /sys
        - name: udev
          hostPath:
            path: /run/udev
        - name: data
          hostPath:
            path: /var/lib/vertex # somewhere in the host
        - name: logs
          hostPath:
            path: /var/log/pods
---
apiVersion: v1
kind: Service
metadata:
  name: vertex
spec:
  clusterIP: None
  selector:
    app.kubernetes.io/name: vertex
    app.kubernetes.io/component: agent
  ports:
    - port: 9100
      protocol: TCP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: vertex
spec:
  rules:
    - http:
        paths:
          - backend:
              service:
                name: vertex
                port:
                  number: 9100
            pathType: Prefix
            path: /metrics